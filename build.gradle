plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}
def springBootVersion = "2.1.0.RELEASE"
def allureVersion = "2.13.6"
def junit5Version = "5.6.2"
def aspectjVersion = "1.9.7"

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

allure {
    configuration = 'testImplementation'
    aspectjweaver = true
    version = allureVersion

    clean = true

    useJUnit5 {
        version = allureVersion
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.5'
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'io.rest-assured:rest-assured:4.4.0'

    implementation group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.14.0'
    testImplementation("io.qameta.allure:allure-java-commons:$allureVersion")
    testImplementation("io.qameta.allure:allure-junit-platform:$allureVersion")
    testImplementation("io.qameta.allure:allure-junit5:$allureVersion")
    testImplementation("org.aspectj:aspectjweaver:$aspectjVersion")

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit5Version")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junit5Version")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junit5Version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit5Version")
}

test {
    useJUnitPlatform{
        systemProperty 'junit.jupiter.testinstance.lifecycle.default'         , 'per_class'
        systemProperty 'junit.jupiter.execution.parallel.enabled',              'true'
        systemProperty 'junit.jupiter.execution.parallel.mode.default',         'same_thread'
        systemProperty 'junit.jupiter.execution.parallel.mode.classes.default', 'concurrent'
    }
    if (project.hasProperty("api_key")) {
        systemProperties.put("api_key", "$api_key")
    }
}